{"env_info": "sys.platform: linux\nPython: 3.10.9 (main, Jan 11 2023, 15:21:40) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce GTX 1080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.3, V11.3.109\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.12.1+cu102\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.1+cu102\nOpenCV: 4.6.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMClassification: 0.25.0+3d4f80d", "seed": 1160382984, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(3, ),\n        style='pytorch'),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=5,\n        in_channels=2048,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n        topk=(1, 5)))\ndataset_type = 'ImageNet'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='RandomResizedCrop', size=224),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='Resize', size=(256, -1)),\n    dict(type='CenterCrop', crop_size=224),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=96,\n    workers_per_gpu=1,\n    train=dict(\n        type='CustomDataset',\n        data_prefix='dataset/',\n        ann_file='dataset/flower_dataset_split/train.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='RandomResizedCrop', size=224),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='CustomDataset',\n        data_prefix='dataset/',\n        ann_file='dataset/flower_dataset_split/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1)),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]),\n    test=dict(\n        type='CustomDataset',\n        data_prefix='dataset/',\n        ann_file='dataset/flower_dataset_split/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1)),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(interval=1, metric='accuracy')\noptimizer = dict(type='SGD', lr=0.0001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', step=[30, 60, 90])\nrunner = dict(type='EpochBasedRunner', max_epochs=30)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'pretrained/resnet50_8xb32_in1k_20210831-ea4938fc.pth'\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = 'flower_cls_resnet50/'\ngpu_ids = [0]\ndevice = 'cuda'\nseed = 1160382984\n", "CLASSES": null}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.28367, "loss": 1.60413, "time": 0.81383}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02573, "loss": 1.548, "time": 0.52504}
{"mode": "val", "epoch": 1, "iter": 6, "lr": 0.0001, "accuracy_top-1": 48.95105, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 2, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.26961, "loss": 1.46043, "time": 0.75076}
{"mode": "train", "epoch": 2, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02604, "loss": 1.39851, "time": 0.5254}
{"mode": "val", "epoch": 2, "iter": 6, "lr": 0.0001, "accuracy_top-1": 75.52448, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 3, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.28797, "loss": 1.31878, "time": 0.74688}
{"mode": "train", "epoch": 3, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02611, "loss": 1.25726, "time": 0.52532}
{"mode": "val", "epoch": 3, "iter": 6, "lr": 0.0001, "accuracy_top-1": 83.74126, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 4, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.28066, "loss": 1.18297, "time": 0.75308}
{"mode": "train", "epoch": 4, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02581, "loss": 1.12029, "time": 0.52733}
{"mode": "val", "epoch": 4, "iter": 6, "lr": 0.0001, "accuracy_top-1": 88.28671, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 5, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.29358, "loss": 1.0587, "time": 0.75425}
{"mode": "train", "epoch": 5, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.0261, "loss": 1.02305, "time": 0.52535}
{"mode": "val", "epoch": 5, "iter": 6, "lr": 0.0001, "accuracy_top-1": 89.68532, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 6, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.28505, "loss": 0.97384, "time": 0.75674}
{"mode": "train", "epoch": 6, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02625, "loss": 0.91834, "time": 0.52629}
{"mode": "val", "epoch": 6, "iter": 6, "lr": 0.0001, "accuracy_top-1": 90.55944, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 7, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.29731, "loss": 0.86924, "time": 0.74952}
{"mode": "train", "epoch": 7, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02603, "loss": 0.84208, "time": 0.52639}
{"mode": "val", "epoch": 7, "iter": 6, "lr": 0.0001, "accuracy_top-1": 91.25874, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 8, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.2763, "loss": 0.78833, "time": 0.75719}
{"mode": "train", "epoch": 8, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02532, "loss": 0.7798, "time": 0.52595}
{"mode": "val", "epoch": 8, "iter": 6, "lr": 0.0001, "accuracy_top-1": 91.43357, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 9, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.31551, "loss": 0.73018, "time": 0.75855}
{"mode": "train", "epoch": 9, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02615, "loss": 0.70571, "time": 0.52706}
{"mode": "val", "epoch": 9, "iter": 6, "lr": 0.0001, "accuracy_top-1": 91.60839, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 10, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.42391, "loss": 0.67521, "time": 0.76043}
{"mode": "train", "epoch": 10, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02602, "loss": 0.66008, "time": 0.52833}
{"mode": "val", "epoch": 10, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.48252, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 11, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.29738, "loss": 0.61692, "time": 0.75308}
{"mode": "train", "epoch": 11, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02677, "loss": 0.59751, "time": 0.52716}
{"mode": "val", "epoch": 11, "iter": 6, "lr": 0.0001, "accuracy_top-1": 91.95805, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 12, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.29112, "loss": 0.60088, "time": 0.75449}
{"mode": "train", "epoch": 12, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02584, "loss": 0.57216, "time": 0.52644}
{"mode": "val", "epoch": 12, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.65734, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 13, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.28822, "loss": 0.55243, "time": 0.75499}
{"mode": "train", "epoch": 13, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.04106, "loss": 0.50577, "time": 0.5257}
{"mode": "val", "epoch": 13, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.30769, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 14, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.31871, "loss": 0.51785, "time": 0.75774}
{"mode": "train", "epoch": 14, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02619, "loss": 0.4981, "time": 0.52642}
{"mode": "val", "epoch": 14, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.007, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 15, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.27233, "loss": 0.506, "time": 0.75854}
{"mode": "train", "epoch": 15, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02606, "loss": 0.46362, "time": 0.52979}
{"mode": "val", "epoch": 15, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.83217, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 16, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.28052, "loss": 0.46258, "time": 0.75513}
{"mode": "train", "epoch": 16, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02615, "loss": 0.44525, "time": 0.52758}
{"mode": "val", "epoch": 16, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.48252, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 17, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.28207, "loss": 0.44811, "time": 0.753}
{"mode": "train", "epoch": 17, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.0262, "loss": 0.42607, "time": 0.52727}
{"mode": "val", "epoch": 17, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.65734, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 18, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.29243, "loss": 0.41502, "time": 0.75355}
{"mode": "train", "epoch": 18, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02635, "loss": 0.40302, "time": 0.52621}
{"mode": "val", "epoch": 18, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.83217, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 19, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.27849, "loss": 0.41154, "time": 0.75659}
{"mode": "train", "epoch": 19, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02625, "loss": 0.39132, "time": 0.52902}
{"mode": "val", "epoch": 19, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.65734, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 20, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.26345, "loss": 0.39076, "time": 0.75077}
{"mode": "train", "epoch": 20, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02626, "loss": 0.37922, "time": 0.52659}
{"mode": "val", "epoch": 20, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.83217, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 21, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.2649, "loss": 0.36508, "time": 0.7473}
{"mode": "train", "epoch": 21, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02593, "loss": 0.37724, "time": 0.52626}
{"mode": "val", "epoch": 21, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.83217, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 22, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.28949, "loss": 0.36764, "time": 0.75711}
{"mode": "train", "epoch": 22, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02618, "loss": 0.34374, "time": 0.52622}
{"mode": "val", "epoch": 22, "iter": 6, "lr": 0.0001, "accuracy_top-1": 92.83217, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 23, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.26083, "loss": 0.35083, "time": 0.75208}
{"mode": "train", "epoch": 23, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02589, "loss": 0.35234, "time": 0.52718}
{"mode": "val", "epoch": 23, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.35664, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 24, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.27786, "loss": 0.35001, "time": 0.75183}
{"mode": "train", "epoch": 24, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02608, "loss": 0.33779, "time": 0.52527}
{"mode": "val", "epoch": 24, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.53147, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 25, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.26388, "loss": 0.31468, "time": 0.75084}
{"mode": "train", "epoch": 25, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02581, "loss": 0.3157, "time": 0.52761}
{"mode": "val", "epoch": 25, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.35664, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 26, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.27247, "loss": 0.32404, "time": 0.7506}
{"mode": "train", "epoch": 26, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02659, "loss": 0.29738, "time": 0.52657}
{"mode": "val", "epoch": 26, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.70629, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 27, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.301, "loss": 0.31055, "time": 0.75574}
{"mode": "train", "epoch": 27, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02611, "loss": 0.31618, "time": 0.52627}
{"mode": "val", "epoch": 27, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.18182, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 28, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.27933, "loss": 0.29235, "time": 0.75217}
{"mode": "train", "epoch": 28, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02598, "loss": 0.2954, "time": 0.52612}
{"mode": "val", "epoch": 28, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.70629, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 29, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.26698, "loss": 0.29034, "time": 0.74961}
{"mode": "train", "epoch": 29, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02578, "loss": 0.29966, "time": 0.52665}
{"mode": "val", "epoch": 29, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.70629, "accuracy_top-5": 100.0}
{"mode": "train", "epoch": 30, "iter": 10, "lr": 0.0001, "memory": 8240, "data_time": 0.26768, "loss": 0.28728, "time": 0.75096}
{"mode": "train", "epoch": 30, "iter": 20, "lr": 0.0001, "memory": 8240, "data_time": 0.02632, "loss": 0.27545, "time": 0.52547}
{"mode": "val", "epoch": 30, "iter": 6, "lr": 0.0001, "accuracy_top-1": 93.88112, "accuracy_top-5": 100.0}
